generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  password      String?
  firmName      String?
  firmSize      String?
  phone         String?
  role          Role      @default(USER)
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  bookings      Booking[]
  payments      Payment[]
  sessions      Session[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Booking {
  id          String   @id @default(cuid())
  userId      String?
  name        String
  email       String
  phone       String
  firmName    String?
  date        DateTime
  time        String
  type        String   @default("demo")
  status      BookingStatus @default(PENDING)
  notes       String?
  message     String?
  meetingLink String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  user        User?    @relation(fields: [userId], references: [id])
}

model Payment {
  id            String   @id @default(cuid())
  userId        String?
  orderId       String   @unique
  paymentId     String?  @unique
  signature     String?
  amount        Float
  currency      String   @default("INR")
  status        PaymentStatus @default(PENDING)
  plan          String
  email         String
  phone         String?
  name          String?
  company       String?
  gstNumber     String?
  address       String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  user          User?    @relation(fields: [userId], references: [id])
  invoice       Invoice?
}

model Invoice {
  id            String   @id @default(cuid())
  invoiceNumber String   @unique
  paymentId     String   @unique
  amount        Float
  gst           Float    @default(0)
  total         Float
  status        String   @default("paid")
  issuedAt      DateTime @default(now())
  dueDate       DateTime?
  pdfUrl        String?
  
  payment       Payment  @relation(fields: [paymentId], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

enum PaymentStatus {
  PENDING
  SUCCESS
  FAILED
  REFUNDED
}
<<<<<<< HEAD

model Registration {
  id              String   @id @default(cuid())
  name            String
  email           String
  username        String
  phone           String
  password        String
  role            String
  professionalType String?
  membershipNo    String?
  registrationNo  String?
  instituteName   String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
=======
>>>>>>> a0ca34adb227776b18a3475234c2ee4188ffbe00
