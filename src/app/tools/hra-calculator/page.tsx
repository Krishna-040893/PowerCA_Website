'use client'

import { useState } from 'react'
import { Card } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'
import { Label } from '@/components/ui/label'
import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'
import { Calculator, RefreshCw, Download, Home } from 'lucide-react'
import Link from 'next/link'

export default function HRACalculatorPage() {
  const [basicSalary, setBasicSalary] = useState<string>('')
  const [dearnessAllowance, setDearnessAllowance] = useState<string>('')
  const [hraReceived, setHraReceived] = useState<string>('')
  const [rentPaid, setRentPaid] = useState<string>('')
  const [metro, setMetro] = useState<'yes' | 'no'>('yes')

  const [results, setResults] = useState({
    actualHRA: 0,
    rentPaidMinus10: 0,
    percentOfSalary: 0,
    exemptedHRA: 0,
    taxableHRA: 0,
    monthlySavings: 0,
    annualTaxSavings: 0,
    basicPlusDA: 0,
    metroPercentage: 0
  })

  const calculateHRA = () => {
    const basic = parseFloat(basicSalary) || 0
    const da = parseFloat(dearnessAllowance) || 0
    const hra = parseFloat(hraReceived) || 0
    const rent = parseFloat(rentPaid) || 0

    // Basic + DA (considered for HRA calculation)
    const basicPlusDA = basic + da

    // Three conditions for HRA exemption
    // 1. Actual HRA received
    const actualHRA = hra

    // 2. Rent paid minus 10% of salary
    const rentPaidMinus10 = Math.max(0, rent - (basicPlusDA * 0.10))

    // 3. 50% (metro) or 40% (non-metro) of salary
    const metroPercentage = metro === 'yes' ? 50 : 40
    const percentOfSalary = (basicPlusDA * metroPercentage) / 100

    // Minimum of the three is exempt
    const exemptedHRA = Math.min(actualHRA, rentPaidMinus10, percentOfSalary)

    // Taxable HRA
    const taxableHRA = Math.max(0, actualHRA - exemptedHRA)

    // Tax savings (assuming 30% tax bracket)
    const monthlySavings = exemptedHRA * 0.30
    const annualTaxSavings = monthlySavings * 12

    setResults({
      actualHRA: Math.round(actualHRA * 100) / 100,
      rentPaidMinus10: Math.round(rentPaidMinus10 * 100) / 100,
      percentOfSalary: Math.round(percentOfSalary * 100) / 100,
      exemptedHRA: Math.round(exemptedHRA * 100) / 100,
      taxableHRA: Math.round(taxableHRA * 100) / 100,
      monthlySavings: Math.round(monthlySavings * 100) / 100,
      annualTaxSavings: Math.round(annualTaxSavings * 100) / 100,
      basicPlusDA: Math.round(basicPlusDA * 100) / 100,
      metroPercentage
    })
  }

  const resetCalculator = () => {
    setBasicSalary('')
    setDearnessAllowance('')
    setHraReceived('')
    setRentPaid('')
    setMetro('yes')
    setResults({
      actualHRA: 0,
      rentPaidMinus10: 0,
      percentOfSalary: 0,
      exemptedHRA: 0,
      taxableHRA: 0,
      monthlySavings: 0,
      annualTaxSavings: 0,
      basicPlusDA: 0,
      metroPercentage: 0
    })
  }

  const downloadResults = () => {
    const content = `HRA Exemption Calculation Results
====================================
Monthly Salary Details:
----------------------
Basic Salary: ₹${basicSalary}
Dearness Allowance: ₹${dearnessAllowance}
Total (Basic + DA): ₹${results.basicPlusDA.toLocaleString('en-IN')}
HRA Received: ₹${hraReceived}
Rent Paid: ₹${rentPaid}
City Type: ${metro === 'yes' ? 'Metro City' : 'Non-Metro City'}

HRA Exemption Calculation:
-------------------------
As per Section 10(13A), exemption is minimum of:

1. Actual HRA Received: ₹${results.actualHRA.toLocaleString('en-IN')}
2. Rent Paid - 10% of Salary: ₹${results.rentPaidMinus10.toLocaleString('en-IN')}
3. ${results.metroPercentage}% of Basic + DA: ₹${results.percentOfSalary.toLocaleString('en-IN')}

Results:
--------
HRA Exempted (Monthly): ₹${results.exemptedHRA.toLocaleString('en-IN')}
Taxable HRA (Monthly): ₹${results.taxableHRA.toLocaleString('en-IN')}

Tax Savings (at 30% bracket):
----------------------------
Monthly Tax Savings: ₹${results.monthlySavings.toLocaleString('en-IN')}
Annual Tax Savings: ₹${results.annualTaxSavings.toLocaleString('en-IN')}

Generated by PowerCA HRA Calculator
https://powerca.in/tools/hra-calculator`

    const blob = new Blob([content], { type: 'text/plain' })
    const url = window.URL.createObjectURL(blob)
    const a = document.createElement('a')
    a.href = url
    a.download = `hra-calculation-${new Date().toISOString().split('T')[0]}.txt`
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    window.URL.revokeObjectURL(url)
  }

  return (
    <div className="min-h-screen bg-gradient-to-b from-blue-50 to-white py-12">
      <div className="container mx-auto px-6 lg:px-8">
        {/* Header */}
        <div className="text-center mb-12">
          <h1 className="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
            HRA Calculator - House Rent Allowance Exemption
          </h1>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            Calculate your HRA exemption under Section 10(13A). Find out how much tax you can save on rent payments.
          </p>
        </div>

        <div className="grid lg:grid-cols-2 gap-8 max-w-6xl mx-auto">
          {/* Calculator Input */}
          <Card className="p-6">
            <h2 className="text-2xl font-semibold mb-6 flex items-center gap-2">
              <Home className="h-6 w-6 text-blue-600" />
              HRA Calculator
            </h2>

            <div className="space-y-6">
              {/* Basic Salary */}
              <div>
                <Label htmlFor="basic" className="text-base font-semibold mb-2 block">
                  Basic Salary (Monthly)
                </Label>
                <div className="relative">
                  <span className="absolute left-3 top-1/2 -translate-y-1/2 text-gray-500">₹</span>
                  <Input
                    id="basic"
                    type="number"
                    value={basicSalary}
                    onChange={(e) => setBasicSalary(e.target.value)}
                    placeholder="Enter basic salary"
                    className="pl-8"
                  />
                </div>
              </div>

              {/* Dearness Allowance */}
              <div>
                <Label htmlFor="da" className="text-base font-semibold mb-2 block">
                  Dearness Allowance (Monthly)
                </Label>
                <div className="relative">
                  <span className="absolute left-3 top-1/2 -translate-y-1/2 text-gray-500">₹</span>
                  <Input
                    id="da"
                    type="number"
                    value={dearnessAllowance}
                    onChange={(e) => setDearnessAllowance(e.target.value)}
                    placeholder="Enter DA (if applicable)"
                    className="pl-8"
                  />
                </div>
                <p className="text-xs text-gray-500 mt-1">Leave empty if not applicable</p>
              </div>

              {/* HRA Received */}
              <div>
                <Label htmlFor="hra" className="text-base font-semibold mb-2 block">
                  HRA Received (Monthly)
                </Label>
                <div className="relative">
                  <span className="absolute left-3 top-1/2 -translate-y-1/2 text-gray-500">₹</span>
                  <Input
                    id="hra"
                    type="number"
                    value={hraReceived}
                    onChange={(e) => setHraReceived(e.target.value)}
                    placeholder="Enter HRA received"
                    className="pl-8"
                  />
                </div>
              </div>

              {/* Rent Paid */}
              <div>
                <Label htmlFor="rent" className="text-base font-semibold mb-2 block">
                  Rent Paid (Monthly)
                </Label>
                <div className="relative">
                  <span className="absolute left-3 top-1/2 -translate-y-1/2 text-gray-500">₹</span>
                  <Input
                    id="rent"
                    type="number"
                    value={rentPaid}
                    onChange={(e) => setRentPaid(e.target.value)}
                    placeholder="Enter actual rent paid"
                    className="pl-8"
                  />
                </div>
              </div>

              {/* Metro/Non-Metro */}
              <div>
                <Label className="text-base font-semibold mb-3 block">City Type</Label>
                <RadioGroup value={metro} onValueChange={(value: 'yes' | 'no') => setMetro(value)}>
                  <div className="flex items-center space-x-2 mb-2">
                    <RadioGroupItem value="yes" id="metro" />
                    <Label htmlFor="metro" className="cursor-pointer">
                      Metro City (Delhi, Mumbai, Kolkata, Chennai - 50% of salary)
                    </Label>
                  </div>
                  <div className="flex items-center space-x-2">
                    <RadioGroupItem value="no" id="non-metro" />
                    <Label htmlFor="non-metro" className="cursor-pointer">
                      Non-Metro City (40% of salary)
                    </Label>
                  </div>
                </RadioGroup>
              </div>

              {/* Action Buttons */}
              <div className="flex gap-4">
                <Button onClick={calculateHRA} className="flex-1">
                  <Calculator className="h-4 w-4 mr-2" />
                  Calculate HRA
                </Button>
                <Button onClick={resetCalculator} variant="outline">
                  <RefreshCw className="h-4 w-4 mr-2" />
                  Reset
                </Button>
              </div>
            </div>
          </Card>

          {/* Results */}
          <Card className="p-6">
            <h2 className="text-2xl font-semibold mb-6">HRA Exemption Results</h2>

            <div className="space-y-4">
              {/* Three Conditions */}
              <div className="p-4 bg-blue-50 rounded-lg space-y-3">
                <p className="text-sm font-semibold text-blue-900 mb-2">HRA Exemption Conditions:</p>
                <div className="space-y-2">
                  <div className="flex justify-between">
                    <span className="text-sm text-blue-800">1. Actual HRA Received</span>
                    <span className="font-semibold text-blue-900">₹{results.actualHRA.toLocaleString('en-IN')}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-sm text-blue-800">2. Rent - 10% of Salary</span>
                    <span className="font-semibold text-blue-900">₹{results.rentPaidMinus10.toLocaleString('en-IN')}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-sm text-blue-800">3. {results.metroPercentage}% of Basic + DA</span>
                    <span className="font-semibold text-blue-900">₹{results.percentOfSalary.toLocaleString('en-IN')}</span>
                  </div>
                </div>
                <p className="text-xs text-blue-700 pt-2 border-t border-blue-200">
                  Minimum of the above three is exempt from tax
                </p>
              </div>

              <div className="flex justify-between py-4 bg-green-50 px-4 rounded-lg">
                <span className="font-semibold text-gray-900">HRA Exempted (Monthly)</span>
                <span className="font-bold text-2xl text-green-600">₹{results.exemptedHRA.toLocaleString('en-IN')}</span>
              </div>

              <div className="flex justify-between py-3 border-b">
                <span className="text-gray-600">Taxable HRA (Monthly)</span>
                <span className="font-semibold text-lg text-red-600">₹{results.taxableHRA.toLocaleString('en-IN')}</span>
              </div>

              <div className="grid grid-cols-2 gap-4 pt-4">
                <div className="text-center p-3 bg-purple-50 rounded-lg">
                  <p className="text-sm text-gray-600">Monthly Tax Savings</p>
                  <p className="text-xl font-bold text-purple-600">₹{results.monthlySavings.toLocaleString('en-IN')}</p>
                  <p className="text-xs text-gray-500 mt-1">At 30% tax bracket</p>
                </div>
                <div className="text-center p-3 bg-orange-50 rounded-lg">
                  <p className="text-sm text-gray-600">Annual Tax Savings</p>
                  <p className="text-xl font-bold text-orange-600">₹{results.annualTaxSavings.toLocaleString('en-IN')}</p>
                  <p className="text-xs text-gray-500 mt-1">For FY 2024-25</p>
                </div>
              </div>

              {results.exemptedHRA > 0 && (
                <>
                  <div className="mt-4 p-4 bg-yellow-50 rounded-lg">
                    <p className="text-sm text-yellow-900 font-semibold mb-2">Documents Required:</p>
                    <ul className="text-sm text-yellow-800 space-y-1">
                      <li>• Rent receipts or rental agreement</li>
                      <li>• Landlord's PAN (if rent {'>'} ₹1 lakh/year)</li>
                      <li>• Proof of rent payment (bank statements)</li>
                    </ul>
                  </div>

                  <Button onClick={downloadResults} variant="outline" className="w-full">
                    <Download className="h-4 w-4 mr-2" />
                    Download Calculation
                  </Button>
                </>
              )}
            </div>

            {/* CTA */}
            <div className="mt-8 p-4 bg-gray-50 rounded-lg">
              <p className="text-sm text-gray-600 mb-3">
                Need help with salary structuring and tax optimization?
              </p>
              <Link href="/book-demo">
                <Button className="w-full">
                  Try PowerCA Free for 30 Days
                </Button>
              </Link>
            </div>
          </Card>
        </div>

        {/* Info Section */}
        <div className="mt-12 max-w-4xl mx-auto grid md:grid-cols-2 gap-6">
          <Card className="p-6">
            <h3 className="text-lg font-semibold mb-3">HRA Exemption Rules</h3>
            <ul className="text-sm text-gray-600 space-y-2">
              <li>✓ You must be living in a rented accommodation</li>
              <li>✓ You should be receiving HRA from your employer</li>
              <li>✓ You cannot claim if you own a house in the same city</li>
              <li>✓ HRA and home loan benefits can be claimed together if houses are in different cities</li>
            </ul>
          </Card>

          <Card className="p-6">
            <h3 className="text-lg font-semibold mb-3">Metro Cities List</h3>
            <p className="text-sm text-gray-600 mb-2">
              The following cities qualify for 50% HRA exemption:
            </p>
            <ul className="text-sm text-gray-600 grid grid-cols-2 gap-1">
              <li>• Delhi/NCR</li>
              <li>• Mumbai</li>
              <li>• Chennai</li>
              <li>• Kolkata</li>
            </ul>
            <p className="text-sm text-gray-500 mt-3">
              All other cities get 40% exemption limit
            </p>
          </Card>
        </div>
      </div>
    </div>
  )
}