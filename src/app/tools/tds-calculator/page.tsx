'use client'

import { useState } from 'react'
import { Card } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'
import { Label } from '@/components/ui/label'
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'
import { Calculator, RefreshCw, Download, Info } from 'lucide-react'
import Link from 'next/link'

const tdsRates = [
  { section: '192', description: 'Salary', rate: 'As per slab' },
  { section: '192A', description: 'Premature EPF withdrawal', rate: '10' },
  { section: '193', description: 'Interest on securities', rate: '10' },
  { section: '194', description: 'Dividend', rate: '10' },
  { section: '194A', description: 'Interest other than securities', rate: '10' },
  { section: '194B', description: 'Lottery/Game winnings', rate: '30' },
  { section: '194C', description: 'Contractor - Individual/HUF', rate: '1' },
  { section: '194C', description: 'Contractor - Others', rate: '2' },
  { section: '194D', description: 'Insurance commission', rate: '5' },
  { section: '194DA', description: 'Life insurance policy maturity', rate: '5' },
  { section: '194H', description: 'Commission/Brokerage', rate: '5' },
  { section: '194I', description: 'Rent - Land/Building', rate: '10' },
  { section: '194I', description: 'Rent - Plant/Machinery', rate: '2' },
  { section: '194J', description: 'Professional/Technical fees', rate: '10' },
  { section: '194N', description: 'Cash withdrawal above 1 Cr', rate: '2' },
  { section: '194Q', description: 'Purchase of goods', rate: '0.1' },
  { section: '206C', description: 'TCS on sale of goods', rate: '0.1' },
]

export default function TDSCalculatorPage() {
  const [paymentAmount, setPaymentAmount] = useState<string>('')
  const [tdsRate, setTdsRate] = useState<string>('')
  const [customRate, setCustomRate] = useState<string>('')
  const [hasPAN, setHasPAN] = useState<string>('yes')

  const [results, setResults] = useState({
    grossAmount: 0,
    tdsAmount: 0,
    netPayable: 0,
    effectiveRate: 0,
  })

  const calculateTDS = () => {
    const amount = parseFloat(paymentAmount) || 0
    let rate = parseFloat(customRate || tdsRate) || 0

    // If no PAN, TDS rate is higher (typically 20% or max rate)
    if (hasPAN === 'no' && rate < 20) {
      rate = 20
    }

    const tdsAmt = (amount * rate) / 100
    const netAmt = amount - tdsAmt

    setResults({
      grossAmount: Math.round(amount * 100) / 100,
      tdsAmount: Math.round(tdsAmt * 100) / 100,
      netPayable: Math.round(netAmt * 100) / 100,
      effectiveRate: rate,
    })
  }

  const resetCalculator = () => {
    setPaymentAmount('')
    setTdsRate('')
    setCustomRate('')
    setHasPAN('yes')
    setResults({
      grossAmount: 0,
      tdsAmount: 0,
      netPayable: 0,
      effectiveRate: 0,
    })
  }

  const downloadResults = () => {
    const selectedSection = tdsRates.find(s => s.rate === tdsRate)
    const content = `TDS Calculation Results
========================
Payment Amount: ₹${paymentAmount}
TDS Section: ${selectedSection?.section || 'Custom'} - ${selectedSection?.description || 'Custom Rate'}
TDS Rate: ${results.effectiveRate}%
PAN Available: ${hasPAN === 'yes' ? 'Yes' : 'No'}

Results:
--------
Gross Amount: ₹${results.grossAmount}
TDS Deducted: ₹${results.tdsAmount}
Net Payable: ₹${results.netPayable}

Generated by PowerCA TDS Calculator
https://powerca.in/tools/tds-calculator`

    const blob = new Blob([content], { type: 'text/plain' })
    const url = window.URL.createObjectURL(blob)
    const a = document.createElement('a')
    a.href = url
    a.download = `tds-calculation-${new Date().toISOString().split('T')[0]}.txt`
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    window.URL.revokeObjectURL(url)
  }

  return (
    <div className="min-h-screen bg-gradient-to-b from-blue-50 to-white py-12">
      <div className="container mx-auto px-6 lg:px-8">
        {/* Header */}
        <div className="text-center mb-12">
          <h1 className="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
            TDS Calculator India 2024-25
          </h1>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            Calculate TDS on various payments as per Income Tax Act. Free online tool for CAs and businesses.
          </p>
        </div>

        <div className="grid lg:grid-cols-2 gap-8 max-w-6xl mx-auto">
          {/* Calculator Input */}
          <Card className="p-6">
            <h2 className="text-2xl font-semibold mb-6 flex items-center gap-2">
              <Calculator className="h-6 w-6 text-blue-600" />
              TDS Calculator
            </h2>

            <div className="space-y-6">
              {/* Payment Amount */}
              <div>
                <Label htmlFor="amount" className="text-base font-semibold mb-2 block">
                  Payment Amount
                </Label>
                <div className="relative">
                  <span className="absolute left-3 top-1/2 -translate-y-1/2 text-gray-500">₹</span>
                  <Input
                    id="amount"
                    type="number"
                    value={paymentAmount}
                    onChange={(e) => setPaymentAmount(e.target.value)}
                    placeholder="Enter payment amount"
                    className="pl-8"
                  />
                </div>
              </div>

              {/* TDS Section */}
              <div>
                <Label htmlFor="tds-section" className="text-base font-semibold mb-2 block">
                  TDS Section & Nature of Payment
                </Label>
                <Select
                  value={tdsRate}
                  onValueChange={(value) => {
                    setTdsRate(value)
                  }}
                >
                  <SelectTrigger id="tds-section">
                    <SelectValue placeholder="Select TDS section" />
                  </SelectTrigger>
                  <SelectContent>
                    {tdsRates.map((section, index) => (
                      <SelectItem key={index} value={section.rate}>
                        {section.section} - {section.description} ({section.rate}%)
                      </SelectItem>
                    ))}
                    <SelectItem value="custom">Custom Rate</SelectItem>
                  </SelectContent>
                </Select>

                {tdsRate === 'custom' && (
                  <div className="mt-2">
                    <Input
                      type="number"
                      value={customRate}
                      onChange={(e) => setCustomRate(e.target.value)}
                      placeholder="Enter custom TDS rate (%)"
                    />
                  </div>
                )}
              </div>

              {/* PAN Status */}
              <div>
                <Label className="text-base font-semibold mb-2 block">PAN Available?</Label>
                <Select value={hasPAN} onValueChange={setHasPAN}>
                  <SelectTrigger>
                    <SelectValue />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="yes">Yes - PAN Available</SelectItem>
                    <SelectItem value="no">No - PAN Not Available (20% TDS)</SelectItem>
                  </SelectContent>
                </Select>
                {hasPAN === 'no' && (
                  <p className="text-sm text-orange-600 mt-2 flex items-start gap-1">
                    <Info className="h-4 w-4 flex-shrink-0 mt-0.5" />
                    Without PAN, TDS will be deducted at 20% or the rate specified in the section, whichever is higher.
                  </p>
                )}
              </div>

              {/* Action Buttons */}
              <div className="flex gap-4">
                <Button onClick={calculateTDS} className="flex-1">
                  <Calculator className="h-4 w-4 mr-2" />
                  Calculate TDS
                </Button>
                <Button onClick={resetCalculator} variant="outline">
                  <RefreshCw className="h-4 w-4 mr-2" />
                  Reset
                </Button>
              </div>
            </div>
          </Card>

          {/* Results */}
          <Card className="p-6">
            <h2 className="text-2xl font-semibold mb-6">Calculation Results</h2>

            <div className="space-y-4">
              <div className="flex justify-between py-3 border-b">
                <span className="text-gray-600">Gross Payment Amount</span>
                <span className="font-semibold text-lg">₹{results.grossAmount.toLocaleString('en-IN')}</span>
              </div>

              <div className="flex justify-between py-3 border-b">
                <span className="text-gray-600">TDS Rate Applied</span>
                <span className="font-semibold text-lg">{results.effectiveRate}%</span>
              </div>

              <div className="flex justify-between py-3 border-b">
                <span className="text-gray-600">TDS Amount</span>
                <span className="font-semibold text-lg text-red-600">₹{results.tdsAmount.toLocaleString('en-IN')}</span>
              </div>

              <div className="flex justify-between py-4 bg-green-50 px-4 rounded-lg">
                <span className="font-semibold text-gray-900">Net Payable Amount</span>
                <span className="font-bold text-2xl text-green-600">₹{results.netPayable.toLocaleString('en-IN')}</span>
              </div>

              {results.tdsAmount > 0 && (
                <>
                  <div className="mt-4 p-4 bg-blue-50 rounded-lg">
                    <p className="text-sm text-blue-900 font-semibold mb-2">Important Notes:</p>
                    <ul className="text-sm text-blue-800 space-y-1">
                      <li>• TDS should be deposited by 7th of next month</li>
                      <li>• Quarterly TDS return filing is mandatory</li>
                      <li>• Issue Form 16/16A to the deductee</li>
                    </ul>
                  </div>

                  <Button onClick={downloadResults} variant="outline" className="w-full">
                    <Download className="h-4 w-4 mr-2" />
                    Download Calculation
                  </Button>
                </>
              )}
            </div>

            {/* CTA */}
            <div className="mt-8 p-4 bg-gray-50 rounded-lg">
              <p className="text-sm text-gray-600 mb-3">
                Need comprehensive TDS management and compliance?
              </p>
              <Link href="/book-demo">
                <Button className="w-full">
                  Try PowerCA Free for 30 Days
                </Button>
              </Link>
            </div>
          </Card>
        </div>

        {/* Info Section */}
        <div className="mt-12 max-w-4xl mx-auto grid md:grid-cols-2 gap-6">
          <Card className="p-6">
            <h3 className="text-lg font-semibold mb-3">Common TDS Sections</h3>
            <ul className="text-sm text-gray-600 space-y-2">
              <li><strong>194C:</strong> Payment to contractors</li>
              <li><strong>194J:</strong> Professional/technical services</li>
              <li><strong>194H:</strong> Commission or brokerage</li>
              <li><strong>194I:</strong> Rent payments</li>
              <li><strong>194A:</strong> Interest other than on securities</li>
            </ul>
          </Card>

          <Card className="p-6">
            <h3 className="text-lg font-semibold mb-3">TDS Compliance Checklist</h3>
            <ul className="text-sm text-gray-600 space-y-2">
              <li>✓ Obtain TAN (Tax Deduction Account Number)</li>
              <li>✓ Deduct TDS at correct rates</li>
              <li>✓ Deposit TDS on time to avoid interest</li>
              <li>✓ File quarterly TDS returns</li>
              <li>✓ Issue TDS certificates to deductees</li>
            </ul>
          </Card>
        </div>
      </div>
    </div>
  )
}