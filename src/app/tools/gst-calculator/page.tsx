'use client'

import { useState } from 'react'
import { Card } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'
import { Label } from '@/components/ui/label'
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'
import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'
import { Calculator, RefreshCw, Download } from 'lucide-react'
import Link from 'next/link'

// export const metadata: Metadata = {
//   title: 'GST Calculator India - Calculate GST Online Free | PowerCA',
//   description: 'Free GST calculator for India. Calculate CGST, SGST, IGST instantly. Add or remove GST from amounts. Perfect tool for CAs and businesses.',
//   keywords: 'GST calculator, GST calculator India, CGST calculator, SGST calculator, IGST calculator, GST calculation online',
// }

const gstRates = [
  { value: '0', label: '0% (Exempt)' },
  { value: '0.25', label: '0.25%' },
  { value: '3', label: '3%' },
  { value: '5', label: '5%' },
  { value: '12', label: '12%' },
  { value: '18', label: '18%' },
  { value: '28', label: '28%' },
]

export default function GSTCalculatorPage() {
  const [calculationType, setCalculationType] = useState<'exclusive' | 'inclusive'>('exclusive')
  const [amount, setAmount] = useState<string>('')
  const [gstRate, setGstRate] = useState<string>('18')
  const [customRate, setCustomRate] = useState<string>('')
  const [gstType, setGstType] = useState<'cgst-sgst' | 'igst'>('cgst-sgst')

  const [results, setResults] = useState({
    originalAmount: 0,
    gstAmount: 0,
    cgst: 0,
    sgst: 0,
    igst: 0,
    totalAmount: 0,
  })

  const calculateGST = () => {
    const baseAmount = parseFloat(amount) || 0
    const rate = parseFloat(customRate || gstRate) || 0

    let originalAmt = 0
    let gstAmt = 0
    let totalAmt = 0

    if (calculationType === 'exclusive') {
      // GST to be added to amount
      originalAmt = baseAmount
      gstAmt = (baseAmount * rate) / 100
      totalAmt = baseAmount + gstAmt
    } else {
      // GST included in amount
      originalAmt = (baseAmount * 100) / (100 + rate)
      gstAmt = baseAmount - originalAmt
      totalAmt = baseAmount
    }

    const cgst = gstType === 'cgst-sgst' ? gstAmt / 2 : 0
    const sgst = gstType === 'cgst-sgst' ? gstAmt / 2 : 0
    const igst = gstType === 'igst' ? gstAmt : 0

    setResults({
      originalAmount: Math.round(originalAmt * 100) / 100,
      gstAmount: Math.round(gstAmt * 100) / 100,
      cgst: Math.round(cgst * 100) / 100,
      sgst: Math.round(sgst * 100) / 100,
      igst: Math.round(igst * 100) / 100,
      totalAmount: Math.round(totalAmt * 100) / 100,
    })
  }

  const resetCalculator = () => {
    setAmount('')
    setGstRate('18')
    setCustomRate('')
    setCalculationType('exclusive')
    setGstType('cgst-sgst')
    setResults({
      originalAmount: 0,
      gstAmount: 0,
      cgst: 0,
      sgst: 0,
      igst: 0,
      totalAmount: 0,
    })
  }

  const downloadResults = () => {
    const content = `GST Calculation Results
========================
Calculation Type: ${calculationType === 'exclusive' ? 'GST Exclusive' : 'GST Inclusive'}
Input Amount: ₹${amount}
GST Rate: ${customRate || gstRate}%
GST Type: ${gstType === 'cgst-sgst' ? 'CGST + SGST' : 'IGST'}

Results:
--------
Original Amount: ₹${results.originalAmount}
${gstType === 'cgst-sgst' ? `CGST (${(parseFloat(customRate || gstRate) / 2)}%): ₹${results.cgst}
SGST (${(parseFloat(customRate || gstRate) / 2)}%): ₹${results.sgst}` : `IGST (${customRate || gstRate}%): ₹${results.igst}`}
Total GST: ₹${results.gstAmount}
Total Amount: ₹${results.totalAmount}

Generated by PowerCA GST Calculator
https://powerca.in/tools/gst-calculator`

    const blob = new Blob([content], { type: 'text/plain' })
    const url = window.URL.createObjectURL(blob)
    const a = document.createElement('a')
    a.href = url
    a.download = `gst-calculation-${new Date().toISOString().split('T')[0]}.txt`
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    window.URL.revokeObjectURL(url)
  }

  return (
    <div className="min-h-screen bg-gradient-to-b from-blue-50 to-white py-12">
      <div className="container mx-auto px-6 lg:px-8">
        {/* Header */}
        <div className="text-center mb-12">
          <h1 className="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
            GST Calculator for India
          </h1>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            Calculate GST, CGST, SGST, and IGST instantly. Free online tool for CAs and businesses.
          </p>
        </div>

        <div className="grid lg:grid-cols-2 gap-8 max-w-6xl mx-auto">
          {/* Calculator Input */}
          <Card className="p-6">
            <h2 className="text-2xl font-semibold mb-6 flex items-center gap-2">
              <Calculator className="h-6 w-6 text-blue-600" />
              GST Calculator
            </h2>

            <div className="space-y-6">
              {/* Calculation Type */}
              <div>
                <Label className="text-base font-semibold mb-3 block">Calculation Type</Label>
                <RadioGroup value={calculationType} onValueChange={(value: 'exclusive' | 'inclusive') => setCalculationType(value)}>
                  <div className="flex items-center space-x-2 mb-2">
                    <RadioGroupItem value="exclusive" id="exclusive" />
                    <Label htmlFor="exclusive" className="cursor-pointer">
                      GST Exclusive (Add GST to amount)
                    </Label>
                  </div>
                  <div className="flex items-center space-x-2">
                    <RadioGroupItem value="inclusive" id="inclusive" />
                    <Label htmlFor="inclusive" className="cursor-pointer">
                      GST Inclusive (GST included in amount)
                    </Label>
                  </div>
                </RadioGroup>
              </div>

              {/* Amount Input */}
              <div>
                <Label htmlFor="amount" className="text-base font-semibold mb-2 block">
                  {calculationType === 'exclusive' ? 'Amount (Excluding GST)' : 'Amount (Including GST)'}
                </Label>
                <div className="relative">
                  <span className="absolute left-3 top-1/2 -translate-y-1/2 text-gray-500">₹</span>
                  <Input
                    id="amount"
                    type="number"
                    value={amount}
                    onChange={(e) => setAmount(e.target.value)}
                    placeholder="Enter amount"
                    className="pl-8"
                  />
                </div>
              </div>

              {/* GST Rate */}
              <div>
                <Label htmlFor="gst-rate" className="text-base font-semibold mb-2 block">
                  GST Rate
                </Label>
                <Select value={gstRate} onValueChange={setGstRate}>
                  <SelectTrigger id="gst-rate">
                    <SelectValue placeholder="Select GST rate" />
                  </SelectTrigger>
                  <SelectContent>
                    {gstRates.map((rate) => (
                      <SelectItem key={rate.value} value={rate.value}>
                        {rate.label}
                      </SelectItem>
                    ))}
                    <SelectItem value="custom">Custom Rate</SelectItem>
                  </SelectContent>
                </Select>

                {gstRate === 'custom' && (
                  <div className="mt-2">
                    <Input
                      type="number"
                      value={customRate}
                      onChange={(e) => setCustomRate(e.target.value)}
                      placeholder="Enter custom GST rate (%)"
                    />
                  </div>
                )}
              </div>

              {/* GST Type */}
              <div>
                <Label className="text-base font-semibold mb-3 block">GST Type</Label>
                <RadioGroup value={gstType} onValueChange={(value: 'cgst-sgst' | 'igst') => setGstType(value)}>
                  <div className="flex items-center space-x-2 mb-2">
                    <RadioGroupItem value="cgst-sgst" id="cgst-sgst" />
                    <Label htmlFor="cgst-sgst" className="cursor-pointer">
                      CGST + SGST (Within State)
                    </Label>
                  </div>
                  <div className="flex items-center space-x-2">
                    <RadioGroupItem value="igst" id="igst" />
                    <Label htmlFor="igst" className="cursor-pointer">
                      IGST (Inter-State)
                    </Label>
                  </div>
                </RadioGroup>
              </div>

              {/* Action Buttons */}
              <div className="flex gap-4">
                <Button onClick={calculateGST} className="flex-1">
                  <Calculator className="h-4 w-4 mr-2" />
                  Calculate GST
                </Button>
                <Button onClick={resetCalculator} variant="outline">
                  <RefreshCw className="h-4 w-4 mr-2" />
                  Reset
                </Button>
              </div>
            </div>
          </Card>

          {/* Results */}
          <Card className="p-6">
            <h2 className="text-2xl font-semibold mb-6">Calculation Results</h2>

            <div className="space-y-4">
              <div className="flex justify-between py-3 border-b">
                <span className="text-gray-600">Original Amount</span>
                <span className="font-semibold text-lg">₹{results.originalAmount.toLocaleString('en-IN')}</span>
              </div>

              {gstType === 'cgst-sgst' ? (
                <>
                  <div className="flex justify-between py-3 border-b">
                    <span className="text-gray-600">CGST ({(parseFloat(customRate || gstRate) / 2) || 0}%)</span>
                    <span className="font-semibold text-lg">₹{results.cgst.toLocaleString('en-IN')}</span>
                  </div>
                  <div className="flex justify-between py-3 border-b">
                    <span className="text-gray-600">SGST ({(parseFloat(customRate || gstRate) / 2) || 0}%)</span>
                    <span className="font-semibold text-lg">₹{results.sgst.toLocaleString('en-IN')}</span>
                  </div>
                </>
              ) : (
                <div className="flex justify-between py-3 border-b">
                  <span className="text-gray-600">IGST ({customRate || gstRate}%)</span>
                  <span className="font-semibold text-lg">₹{results.igst.toLocaleString('en-IN')}</span>
                </div>
              )}

              <div className="flex justify-between py-3 border-b">
                <span className="text-gray-600">Total GST</span>
                <span className="font-semibold text-lg text-blue-600">₹{results.gstAmount.toLocaleString('en-IN')}</span>
              </div>

              <div className="flex justify-between py-4 bg-blue-50 px-4 rounded-lg">
                <span className="font-semibold text-gray-900">Total Amount</span>
                <span className="font-bold text-2xl text-blue-600">₹{results.totalAmount.toLocaleString('en-IN')}</span>
              </div>

              {results.totalAmount > 0 && (
                <Button onClick={downloadResults} variant="outline" className="w-full">
                  <Download className="h-4 w-4 mr-2" />
                  Download Calculation
                </Button>
              )}
            </div>

            {/* CTA */}
            <div className="mt-8 p-4 bg-gray-50 rounded-lg">
              <p className="text-sm text-gray-600 mb-3">
                Need comprehensive GST management for your CA practice?
              </p>
              <Link href="/book-demo">
                <Button className="w-full">
                  Try PowerCA Free for 30 Days
                </Button>
              </Link>
            </div>
          </Card>
        </div>

        {/* Info Section */}
        <div className="mt-12 max-w-4xl mx-auto">
          <Card className="p-6">
            <h3 className="text-xl font-semibold mb-4">About GST in India</h3>
            <div className="prose text-gray-600">
              <p className="mb-3">
                GST (Goods and Services Tax) is a comprehensive indirect tax levied on the supply of goods and services in India. It has replaced multiple cascading taxes levied by the central and state governments.
              </p>
              <ul className="list-disc pl-5 space-y-2">
                <li><strong>CGST:</strong> Central GST collected by the Central Government</li>
                <li><strong>SGST:</strong> State GST collected by the State Government</li>
                <li><strong>IGST:</strong> Integrated GST for inter-state transactions</li>
              </ul>
              <p className="mt-3">
                This calculator helps CAs and businesses quickly calculate GST components for accurate billing and compliance.
              </p>
            </div>
          </Card>
        </div>
      </div>
    </div>
  )
}