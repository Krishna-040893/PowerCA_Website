'use client'

import { useState } from 'react'
import { Card } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'
import { Label } from '@/components/ui/label'
import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'
import { Calculator, RefreshCw, Download, Award, Info } from 'lucide-react'
import Link from 'next/link'

export default function GratuityCalculatorPage() {
  const [lastSalary, setLastSalary] = useState<string>('')
  const [yearsOfService, setYearsOfService] = useState<string>('')
  const [monthsOfService, setMonthsOfService] = useState<string>('')
  const [employeeType, setEmployeeType] = useState<'covered' | 'notCovered'>('covered')

  const [results, setResults] = useState({
    totalServiceYears: 0,
    roundedServiceYears: 0,
    gratuityAmount: 0,
    taxExemptAmount: 0,
    taxableAmount: 0,
    formula: '',
    maxLimit: 2000000, // 20 lakhs as per current limit
    actualGratuity: 0
  })

  const calculateGratuity = () => {
    const salary = parseFloat(lastSalary) || 0
    const years = parseFloat(yearsOfService) || 0
    const months = parseFloat(monthsOfService) || 0

    // Convert total service to years
    const totalYears = years + (months / 12)

    // Round service years (6 months or more = 1 year)
    let roundedYears = years
    if (months >= 6) {
      roundedYears = years + 1
    }

    let gratuity = 0
    let formula = ''

    if (employeeType === 'covered') {
      // For employees covered under Gratuity Act
      // Formula: (Last Salary × 15 × Working Years) / 26
      gratuity = (salary * 15 * roundedYears) / 26
      formula = `(₹${salary.toLocaleString('en-IN')} × 15 × ${roundedYears}) ÷ 26`
    } else {
      // For employees not covered under Gratuity Act
      // Formula: (Last Salary × 15 × Working Years) / 30 (or as per company policy)
      gratuity = (salary * 15 * roundedYears) / 30
      formula = `(₹${salary.toLocaleString('en-IN')} × 15 × ${roundedYears}) ÷ 30`
    }

    // Apply maximum limit
    const actualGratuity = Math.min(gratuity, results.maxLimit)

    // Tax exemption calculation
    // Gratuity up to 20 lakhs is tax-exempt
    const taxExempt = Math.min(actualGratuity, results.maxLimit)
    const taxable = Math.max(0, gratuity - results.maxLimit)

    setResults({
      totalServiceYears: Math.round(totalYears * 100) / 100,
      roundedServiceYears: roundedYears,
      gratuityAmount: Math.round(gratuity * 100) / 100,
      taxExemptAmount: Math.round(taxExempt * 100) / 100,
      taxableAmount: Math.round(taxable * 100) / 100,
      formula: formula,
      maxLimit: results.maxLimit,
      actualGratuity: Math.round(actualGratuity * 100) / 100
    })
  }

  const resetCalculator = () => {
    setLastSalary('')
    setYearsOfService('')
    setMonthsOfService('')
    setEmployeeType('covered')
    setResults({
      totalServiceYears: 0,
      roundedServiceYears: 0,
      gratuityAmount: 0,
      taxExemptAmount: 0,
      taxableAmount: 0,
      formula: '',
      maxLimit: 2000000,
      actualGratuity: 0
    })
  }

  const downloadResults = () => {
    const content = `Gratuity Calculation Results
============================
Employee Details:
----------------
Last Drawn Salary: ₹${lastSalary}
Years of Service: ${yearsOfService} years ${monthsOfService} months
Total Service: ${results.totalServiceYears} years
Rounded Service: ${results.roundedServiceYears} years
Employee Type: ${employeeType === 'covered' ? 'Covered under Gratuity Act' : 'Not Covered under Gratuity Act'}

Calculation:
-----------
Formula Used: ${results.formula}
Calculated Gratuity: ₹${results.gratuityAmount.toLocaleString('en-IN')}
Maximum Limit: ₹${results.maxLimit.toLocaleString('en-IN')}
Actual Gratuity: ₹${results.actualGratuity.toLocaleString('en-IN')}

Tax Treatment:
-------------
Tax Exempt Amount: ₹${results.taxExemptAmount.toLocaleString('en-IN')}
Taxable Amount: ₹${results.taxableAmount.toLocaleString('en-IN')}

Note: Gratuity up to ₹20 lakhs is tax-exempt under Section 10(10)

Generated by PowerCA Gratuity Calculator
https://powerca.in/tools/gratuity-calculator`

    const blob = new Blob([content], { type: 'text/plain' })
    const url = window.URL.createObjectURL(blob)
    const a = document.createElement('a')
    a.href = url
    a.download = `gratuity-calculation-${new Date().toISOString().split('T')[0]}.txt`
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    window.URL.revokeObjectURL(url)
  }

  return (
    <div className="min-h-screen bg-gradient-to-b from-blue-50 to-white py-12">
      <div className="container mx-auto px-6 lg:px-8">
        {/* Header */}
        <div className="text-center mb-12">
          <h1 className="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
            Gratuity Calculator India 2024-25
          </h1>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            Calculate gratuity amount as per Payment of Gratuity Act. Check tax exemption under Section 10(10).
          </p>
        </div>

        <div className="grid lg:grid-cols-2 gap-8 max-w-6xl mx-auto">
          {/* Calculator Input */}
          <Card className="p-6">
            <h2 className="text-2xl font-semibold mb-6 flex items-center gap-2">
              <Award className="h-6 w-6 text-blue-600" />
              Gratuity Calculator
            </h2>

            <div className="space-y-6">
              {/* Employee Type */}
              <div>
                <Label className="text-base font-semibold mb-3 block">Employee Type</Label>
                <RadioGroup value={employeeType} onValueChange={(value: 'covered' | 'notCovered') => setEmployeeType(value)}>
                  <div className="flex items-center space-x-2 mb-2">
                    <RadioGroupItem value="covered" id="covered" />
                    <Label htmlFor="covered" className="cursor-pointer">
                      Covered under Gratuity Act (10+ employees)
                    </Label>
                  </div>
                  <div className="flex items-center space-x-2">
                    <RadioGroupItem value="notCovered" id="notCovered" />
                    <Label htmlFor="notCovered" className="cursor-pointer">
                      Not Covered (less than 10 employees)
                    </Label>
                  </div>
                </RadioGroup>
              </div>

              {/* Last Drawn Salary */}
              <div>
                <Label htmlFor="salary" className="text-base font-semibold mb-2 block">
                  Last Drawn Salary (Basic + DA)
                </Label>
                <div className="relative">
                  <span className="absolute left-3 top-1/2 -translate-y-1/2 text-gray-500">₹</span>
                  <Input
                    id="salary"
                    type="number"
                    value={lastSalary}
                    onChange={(e) => setLastSalary(e.target.value)}
                    placeholder="Enter last drawn salary"
                    className="pl-8"
                  />
                </div>
                <p className="text-xs text-gray-500 mt-1">Monthly basic salary + dearness allowance</p>
              </div>

              {/* Years of Service */}
              <div>
                <Label htmlFor="years" className="text-base font-semibold mb-2 block">
                  Years of Service
                </Label>
                <Input
                  id="years"
                  type="number"
                  value={yearsOfService}
                  onChange={(e) => setYearsOfService(e.target.value)}
                  placeholder="Enter completed years"
                  min="0"
                />
                <p className="text-xs text-gray-500 mt-1">Minimum 5 years required for eligibility</p>
              </div>

              {/* Months of Service */}
              <div>
                <Label htmlFor="months" className="text-base font-semibold mb-2 block">
                  Additional Months
                </Label>
                <Input
                  id="months"
                  type="number"
                  value={monthsOfService}
                  onChange={(e) => setMonthsOfService(e.target.value)}
                  placeholder="Enter additional months"
                  min="0"
                  max="11"
                />
                <p className="text-xs text-gray-500 mt-1">6 months or more will be rounded to 1 year</p>
              </div>

              {/* Info Box */}
              <div className="p-4 bg-blue-50 rounded-lg">
                <div className="flex items-start gap-2">
                  <Info className="h-5 w-5 text-blue-600 flex-shrink-0 mt-0.5" />
                  <div className="text-sm text-blue-800">
                    <p className="font-semibold mb-1">Eligibility Criteria:</p>
                    <ul className="space-y-1">
                      <li>• Minimum 5 years of continuous service</li>
                      <li>• Applicable on resignation, retirement, or death</li>
                      <li>• Tax-free up to ₹20 lakhs</li>
                    </ul>
                  </div>
                </div>
              </div>

              {/* Action Buttons */}
              <div className="flex gap-4">
                <Button onClick={calculateGratuity} className="flex-1">
                  <Calculator className="h-4 w-4 mr-2" />
                  Calculate Gratuity
                </Button>
                <Button onClick={resetCalculator} variant="outline">
                  <RefreshCw className="h-4 w-4 mr-2" />
                  Reset
                </Button>
              </div>
            </div>
          </Card>

          {/* Results */}
          <Card className="p-6">
            <h2 className="text-2xl font-semibold mb-6">Gratuity Calculation Results</h2>

            <div className="space-y-4">
              {/* Service Period */}
              <div className="p-4 bg-gray-50 rounded-lg">
                <div className="space-y-2">
                  <div className="flex justify-between">
                    <span className="text-sm text-gray-600">Total Service Period</span>
                    <span className="font-semibold">{results.totalServiceYears} years</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-sm text-gray-600">Rounded Service Years</span>
                    <span className="font-semibold">{results.roundedServiceYears} years</span>
                  </div>
                </div>
              </div>

              {/* Formula Display */}
              {results.formula && (
                <div className="p-4 bg-blue-50 rounded-lg">
                  <p className="text-sm font-semibold text-blue-900 mb-2">Calculation Formula:</p>
                  <p className="text-sm text-blue-800 font-mono">{results.formula}</p>
                  <p className="text-sm text-blue-700 mt-2">
                    = ₹{results.gratuityAmount.toLocaleString('en-IN')}
                  </p>
                </div>
              )}

              {/* Gratuity Amount */}
              <div className="flex justify-between py-3 border-b">
                <span className="text-gray-600">Calculated Gratuity</span>
                <span className="font-semibold text-lg">₹{results.gratuityAmount.toLocaleString('en-IN')}</span>
              </div>

              <div className="flex justify-between py-3 border-b">
                <span className="text-gray-600">Maximum Limit</span>
                <span className="font-semibold text-lg">₹{results.maxLimit.toLocaleString('en-IN')}</span>
              </div>

              <div className="flex justify-between py-4 bg-green-50 px-4 rounded-lg">
                <span className="font-semibold text-gray-900">Payable Gratuity</span>
                <span className="font-bold text-2xl text-green-600">₹{results.actualGratuity.toLocaleString('en-IN')}</span>
              </div>

              {/* Tax Treatment */}
              <div className="grid grid-cols-2 gap-4 pt-4">
                <div className="text-center p-3 bg-emerald-50 rounded-lg">
                  <p className="text-sm text-gray-600">Tax Exempt</p>
                  <p className="text-xl font-bold text-emerald-600">₹{results.taxExemptAmount.toLocaleString('en-IN')}</p>
                  <p className="text-xs text-gray-500 mt-1">Under Sec 10(10)</p>
                </div>
                <div className="text-center p-3 bg-red-50 rounded-lg">
                  <p className="text-sm text-gray-600">Taxable</p>
                  <p className="text-xl font-bold text-red-600">₹{results.taxableAmount.toLocaleString('en-IN')}</p>
                  <p className="text-xs text-gray-500 mt-1">If exceeds ₹20L</p>
                </div>
              </div>

              {results.gratuityAmount > 0 && (
                <>
                  <div className="mt-4 p-4 bg-yellow-50 rounded-lg">
                    <p className="text-sm text-yellow-900 font-semibold mb-2">Important Notes:</p>
                    <ul className="text-sm text-yellow-800 space-y-1">
                      <li>• Gratuity is payable after 5 years of service</li>
                      <li>• In case of death/disability, 5-year rule doesn't apply</li>
                      <li>• Maximum tax-free limit is ₹20 lakhs</li>
                    </ul>
                  </div>

                  <Button onClick={downloadResults} variant="outline" className="w-full">
                    <Download className="h-4 w-4 mr-2" />
                    Download Calculation
                  </Button>
                </>
              )}
            </div>

            {/* CTA */}
            <div className="mt-8 p-4 bg-gray-50 rounded-lg">
              <p className="text-sm text-gray-600 mb-3">
                Need help with employee benefits and compliance?
              </p>
              <Link href="/book-demo">
                <Button className="w-full">
                  Try PowerCA Free for 30 Days
                </Button>
              </Link>
            </div>
          </Card>
        </div>

        {/* Info Section */}
        <div className="mt-12 max-w-4xl mx-auto grid md:grid-cols-2 gap-6">
          <Card className="p-6">
            <h3 className="text-lg font-semibold mb-3">When is Gratuity Payable?</h3>
            <ul className="text-sm text-gray-600 space-y-2">
              <li>✓ Retirement or superannuation</li>
              <li>✓ Resignation after 5 years</li>
              <li>✓ Death or disablement due to accident/disease</li>
              <li>✓ Termination due to retrenchment</li>
              <li>✓ VRS (Voluntary Retirement Scheme)</li>
            </ul>
          </Card>

          <Card className="p-6">
            <h3 className="text-lg font-semibold mb-3">Gratuity Forfeiture Cases</h3>
            <ul className="text-sm text-gray-600 space-y-2">
              <li>✗ Termination for misconduct</li>
              <li>✗ Convicted of moral turpitude</li>
              <li>✗ Violent behavior during service</li>
              <li>✗ Damage to employer property</li>
              <li>✗ Services less than 5 years (except death/disability)</li>
            </ul>
          </Card>
        </div>
      </div>
    </div>
  )
}